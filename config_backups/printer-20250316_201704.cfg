[include mainsail.cfg]
[include led_effects.cfg]
[include config_backup.cfg]
[include blobifier/blobifier.cfg]
[exclude_object]
[virtual_sdcard]
path: /home/voron/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
canbus_uuid: f0657e1b3830

[mcu EBBCan]
canbus_uuid: a64abca93ae4

[mcu scanner]
canbus_uuid: d98b1773b521

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 20000
max_z_velocity: 30
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor toolhead]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 21                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.00633
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 179, 20
accel_chip: adxl345
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

[input_shaper]
shaper_freq_x: 52.2
shaper_type_x: mzv
shaper_freq_y: 35.2
shaper_type_y: mzv
damping_ratio_x: 0.045
damping_ratio_y: 0.050

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
number_of_results_to_keep: 10
keep_raw_data: False
show_macros_in_webui: True
timeout: 600
measurements_chunk_size: 5
max_freq: 200
dpi: 300

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: EBBCan: PB5
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
homing_retract_dist: 10
homing_positive_dir: true

[tmc5160 stepper_x]
cs_pin: PC4
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: false
run_current: 1.2
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: PG9
position_min: 0
position_endstop: 358
position_max: 358
homing_speed: 100
homing_retract_dist: 10
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PD11
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: false
run_current: 1.2
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 22.6789511
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13
sensor_type: PT1000
pullup_resistor: 2200
sensor_pin: EBBCan: PA3
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.020
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 101

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Bed Mesh
##################################################################### 

[bed_mesh]
zero_reference_position: 175, 179   
#    set this to the middle of your bed
speed: 400
#    movement speed of toolhead during bed mesh
horizontal_move_z: 5
#    height of scanner during bed mesh scan
mesh_min: 40, 25
#    start point of bed mesh [X, Y]
mesh_max: 315, 300
#    end point of bed mesh [X, Y]
probe_count: 50, 50
algorithm: bicubic

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
min_power: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan _controller_fan]
pin: PE5
kick_start_time: 0.5
shutdown_speed: 0
min_power: 0.1
max_power: 0.25

## The Filter fans - HE3 Output
[fan_generic filter_fans]
pin: PB10
kick_start_time: 0.5

#####################################################################
#   LED Control
#####################################################################

[output_pin fridge_light]
pin: PD12
pwm: true
shutdown_value: 0
value: 0.01
cycle_time: 0.01

[gcode_button fridge_door]
pin: ^PG10
press_gcode:
    {% if printer["virtual_sdcard"].is_active %}
        SET_PIN PIN=fridge_light VALUE=1.0
    {% else %}
        SET_PIN PIN=fridge_light VALUE=0.01
    {% endif %}
release_gcode:
    SET_PIN PIN=fridge_light VALUE=1.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:175, 179
speed:100
z_hop:10

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:
   35,20
   35,290
   315,290
   315,20
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#   Macros
#####################################################################

[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
gcode:

  {% set target_bed = params.BED|int %}                                             # Fetch bed temp from slicer
  {% set target_extruder = params.EXTRUDER|int %}                                   # Fetch extruder temp from slicer
  {% set target_chamber = params.CHAMBER|default("40")|int %}                       # Fetch minimum chamber temp from slicer with a default of 40C
  {% set initial_tool = params.TOOL|default("0")|int %}                             # Fetch initial tool from slicer
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}                      # Set X center position
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}                      # Set Y center position

    SET_PIN PIN=fridge_light VALUE=1.0                                              # Set lighting to full brightness
    SET_GCODE_OFFSET Z=0                                                            # Set offset to 0
    STATUS_HOMING                                                                   # Set LEDs to homing mode
    G28                                                                             # Home all axes
    G90                                                                             # Set absolute positioning
    M83                                                                             # Set extruder to relative positioning
    SET_VELOCITY_LIMIT ACCEL=6000                                                   # Reset acceleration to machine limit
    BED_MESH_CLEAR                                                                  # Clear loaded bed mesh
    G1 X{x_wait} Y{y_wait} Z15 F9000                                                # Go to center of the bed
    STATUS_HEATING                                                                  # Set LEDs to heating mode
    SET_DISPLAY_TEXT MSG="Preheating"                                               # Display info
    M109 S150                                                                       # Set nozzle temp to 150C
    SET_FAN_SPEED FAN=filter_fans SPEED=1                                           # Turn on chamber fans
    M190 S{target_bed}                                                              # Heat bed to target temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for minimum chamber temp
    SET_DISPLAY_TEXT MSG="Performing QGL"                                           # Display info
    STATUS_LEVELING                                                                 # Set LEDs to leveling mode
    QUAD_GANTRY_LEVEL                                                               # Perform initial QGL
    G28 Z                                                                           # Home Z again after QGL
    STATUS_READY                                                                    # Set LEDs to ready
    SET_DISPLAY_TEXT MSG="Wiping Nozzle"                                            # Display info
    BLOBIFIER_CLEAN                                                                 # Wipe ooze from nozzle
    SET_DISPLAY_TEXT MSG="Performing Bed Mesh"                                      # Display info
    STATUS_MESHING                                                                  # Set LEDs to meshing mode
    BED_MESH_CALIBRATE                                                              # Perform bed mesh scan
    G1 X{x_wait} Y{y_wait} Z15 F9000                                                # Go to center of the bed
    SET_DISPLAY_TEXT MSG="Calibrating Z Offset"                                     # Display info
    CARTOGRAPHER_TOUCH                                                              # Calibrate Z offset using touch mode
    BLOBIFIER_PARK                                                                  # Park over blobifier tray
    SET_DISPLAY_TEXT MSG="Hotend Heating to {target_extruder}C"                     # Display info
    STATUS_HEATING                                                                  # Set LEDs to heating mode
    M109 S{target_extruder}                                                         # Heat nozzle to target temp
    STATUS_READY                                                                    # Set LEDs to ready
    SET_DISPLAY_TEXT MSG="Loading Initial Tool"                                     # Display info
    T{initial_tool}                                                                 # Load initial tool, create blob, wipe and return to park
    SET_DISPLAY_TEXT MSG="Wiping Nozzle"                                            # Display info
    BLOBIFIER_CLEAN                                                                 # Wipe nozzle one more time
    SET_DISPLAY_TEXT MSG="Starting Print"                                           # Display info
    G0 X{x_wait - 50} Y4 F10000                                                     # Move to starting point
    G0 Z0.4                                                                         # Raise Z to 0.4
    G91                                                                             # Set incremental positioning 
    G1 X100 E20 F1000                                                               # Extrude prime line
    G90                                                                             # Set absolute positioning
    STATUS_PRINTING                                                                 # Set LEDs to printing mode
    SET_DISPLAY_TEXT MSG="Printing"                                                 # Display info

[gcode_macro PRINT_END]
gcode:

  {% set th = printer.toolhead %}                                                                             # Set toolhead
  {% set z_end = th.position.z %}                                                                             # Store current Z position for final park
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}               # Set final wipe move parameters
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}               # Set final wipe move parameters
  {% set z_safe = [z_end + 2, th.axis_maximum.z]|min %}                                                       # Set final wipe move parameters
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END                                                                     # Save gcode state
    M400                                                                                                      # Wait for buffer to clear
    G92 E0                                                                                                    # Zero the extruder
    G1 E-8.0 F1800                                                                                            # Retract filament
    G90                                                                                                       # Set absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                                                                   # Perform final anti-stringing wipe move
    BT_TOOL_UNLOAD                                                                                            # Unload current tool
    SET_VELOCITY_LIMIT ACCEL=6000                                                                             # Reset acceleration to machine limit
    TURN_OFF_HEATERS                                                                                          # Turn off heaters
    BLOBIFIER_CLEAN                                                                                           # Wipe ooze from nozzle
    G0 Z{z_safe} F1800                                                                                        # Move nozzle above the stored Z position
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 30} F3600                                                # Move to final park position
    M107                                                                                                      # Turn off parts cooling fan
    SET_FAN_SPEED FAN=filter_fans SPEED=0                                                                     # Turn off chamber fans
    M84                                                                                                       # Turn off motors
    _BLOBIFIER_COUNT_RESET                                                                                    # Reset blob counter
    SET_DISPLAY_TEXT MSG="Remember to empty the purge bucket!"                                                # Display info

  {% if printer["gcode_button fridge_door"].query == "RELEASED" %}                                            # Check if door is open
    SET_PIN PIN=fridge_light VALUE=1.0                                                                        # If open, leave lighting at full brightness
  {% else %}                                                                                                  # If door is not open
    SET_PIN PIN=fridge_light VALUE=0.01                                                                       # Dim lighting
  {% endif %}                                                                                                 # End door check
  
    STATUS_READY                                                                                              # Set LEDs to ready
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END                                                                  # Restore gcode state

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(40)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[include AFC/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.267
#*# pid_ki = 2.264
#*# pid_kd = 514.566
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.040
#*# pid_ki = 1.548
#*# pid_kd = 58.549
#*#
#*# [scanner]
#*# mode = touch
#*# scanner_touch_threshold = 2500
#*# scanner_touch_speed = 3
#*# scanner_touch_z_offset = 0.050
#*#
#*# [scanner model default]
#*# model_coef = 1.450003056665713,
#*# 	1.7856277327046572,
#*# 	0.7872821461329331,
#*# 	0.4260214021050557,
#*# 	0.4022999394872747,
#*# 	0.21521734803532414,
#*# 	-0.3090864778151792,
#*# 	-0.14679769184592503,
#*# 	0.3201284033813137,
#*# 	0.17158841730251417
#*# model_domain = 3.1224869525567063e-07,3.2892355804219394e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 31.360575
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.0.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.143354, 0.144077, 0.144968, 0.145957, 0.144865, 0.141850, 0.140206, 0.140120, 0.139067, 0.138390, 0.139324, 0.141013, 0.137965, 0.135414, 0.133625, 0.133693, 0.134598, 0.134935, 0.138414, 0.138298, 0.136145, 0.136060, 0.137820, 0.138219, 0.141444, 0.142786, 0.143586, 0.145358, 0.145036, 0.146871, 0.146173, 0.144607, 0.144182, 0.140921, 0.140347, 0.139136, 0.139030, 0.140572, 0.141340, 0.144421, 0.142042, 0.140234, 0.139636, 0.139294, 0.140360, 0.137248, 0.144653, 0.140210, 0.142638, 0.143027
#*# 	  0.141261, 0.142870, 0.143789, 0.142847, 0.143224, 0.143189, 0.140420, 0.138476, 0.136513, 0.137791, 0.137222, 0.137701, 0.134291, 0.133702, 0.131387, 0.132380, 0.130967, 0.130355, 0.133403, 0.134814, 0.134654, 0.133216, 0.134121, 0.134808, 0.138001, 0.142062, 0.143335, 0.143179, 0.140693, 0.142651, 0.140805, 0.140722, 0.141380, 0.139014, 0.138051, 0.136337, 0.134464, 0.135488, 0.137858, 0.141429, 0.140933, 0.139806, 0.137739, 0.133858, 0.133290, 0.135102, 0.139642, 0.142234, 0.140634, 0.140018
#*# 	  0.135102, 0.135246, 0.139192, 0.134990, 0.132334, 0.131349, 0.130941, 0.136676, 0.134491, 0.134855, 0.131745, 0.128042, 0.123732, 0.125296, 0.125898, 0.129293, 0.126945, 0.125037, 0.126329, 0.125828, 0.128156, 0.129262, 0.131638, 0.133616, 0.133130, 0.132680, 0.132739, 0.132724, 0.134341, 0.137707, 0.134916, 0.133055, 0.132543, 0.129941, 0.130207, 0.129137, 0.131210, 0.131056, 0.130272, 0.130770, 0.129032, 0.131036, 0.130697, 0.132118, 0.131124, 0.128986, 0.128631, 0.130316, 0.131585, 0.131292
#*# 	  0.125069, 0.124553, 0.126364, 0.123924, 0.124313, 0.124386, 0.124721, 0.124386, 0.121066, 0.119312, 0.115071, 0.115843, 0.114007, 0.114732, 0.113983, 0.113146, 0.114447, 0.114468, 0.116955, 0.116565, 0.120588, 0.120765, 0.119779, 0.116819, 0.118854, 0.121947, 0.124551, 0.127940, 0.126478, 0.124259, 0.120917, 0.119805, 0.121221, 0.119557, 0.123324, 0.120318, 0.118816, 0.114522, 0.114703, 0.118984, 0.119657, 0.124368, 0.123301, 0.119434, 0.116069, 0.116541, 0.118384, 0.119203, 0.121009, 0.119350
#*# 	  0.113445, 0.115793, 0.114655, 0.116231, 0.116651, 0.116433, 0.120221, 0.118245, 0.109657, 0.108902, 0.106504, 0.107566, 0.103065, 0.104350, 0.104034, 0.103989, 0.105139, 0.105041, 0.108035, 0.107424, 0.110876, 0.112404, 0.109993, 0.109270, 0.110584, 0.114693, 0.116065, 0.115643, 0.118179, 0.119056, 0.113562, 0.110647, 0.113383, 0.111152, 0.111042, 0.112358, 0.113188, 0.107842, 0.107424, 0.109819, 0.111372, 0.112433, 0.112789, 0.110954, 0.109669, 0.108904, 0.111253, 0.112032, 0.112714, 0.113743
#*# 	  0.108978, 0.109838, 0.110976, 0.110047, 0.110445, 0.108563, 0.107651, 0.107294, 0.106648, 0.106528, 0.104414, 0.101449, 0.095626, 0.096520, 0.098295, 0.099133, 0.099314, 0.098882, 0.104400, 0.102145, 0.100754, 0.102513, 0.102657, 0.106192, 0.109485, 0.111342, 0.106586, 0.106729, 0.109011, 0.108940, 0.108100, 0.109055, 0.107575, 0.103140, 0.102724, 0.103521, 0.104782, 0.103091, 0.105733, 0.107082, 0.101475, 0.101676, 0.102975, 0.104479, 0.106684, 0.108460, 0.108514, 0.105732, 0.107312, 0.109046
#*# 	  0.106040, 0.106538, 0.106675, 0.106421, 0.105343, 0.104520, 0.100693, 0.103725, 0.105538, 0.101154, 0.099355, 0.098244, 0.096436, 0.096802, 0.096168, 0.098438, 0.095911, 0.095982, 0.098055, 0.096914, 0.096146, 0.100099, 0.102191, 0.100800, 0.101946, 0.103549, 0.103311, 0.104116, 0.103591, 0.104220, 0.103495, 0.102550, 0.101795, 0.101451, 0.101582, 0.099445, 0.103206, 0.100758, 0.102652, 0.102337, 0.102480, 0.101858, 0.103138, 0.103742, 0.103333, 0.102995, 0.102461, 0.104129, 0.105515, 0.106660
#*# 	  0.103347, 0.101319, 0.103095, 0.099893, 0.098364, 0.097403, 0.095769, 0.095507, 0.094458, 0.094645, 0.093310, 0.094156, 0.093203, 0.092425, 0.090467, 0.090286, 0.094586, 0.092104, 0.093056, 0.093270, 0.094499, 0.090581, 0.093554, 0.095282, 0.095584, 0.097652, 0.097499, 0.096413, 0.096453, 0.096530, 0.094193, 0.095830, 0.096413, 0.096223, 0.096354, 0.094028, 0.097087, 0.097121, 0.098026, 0.098874, 0.099485, 0.099915, 0.097585, 0.100227, 0.100296, 0.100299, 0.099837, 0.100628, 0.101328, 0.100708
#*# 	  0.092979, 0.093397, 0.092339, 0.090513, 0.088150, 0.087292, 0.084233, 0.086778, 0.086805, 0.086660, 0.085215, 0.086473, 0.081861, 0.079928, 0.084334, 0.084832, 0.084670, 0.083577, 0.084164, 0.085543, 0.086378, 0.086341, 0.086862, 0.087407, 0.088537, 0.091661, 0.087252, 0.085138, 0.085846, 0.086510, 0.085318, 0.085393, 0.090450, 0.087570, 0.085985, 0.087515, 0.087084, 0.086640, 0.088720, 0.092697, 0.091717, 0.091341, 0.092372, 0.094729, 0.093802, 0.096164, 0.094399, 0.092815, 0.093922, 0.094697
#*# 	  0.083927, 0.083610, 0.082932, 0.080902, 0.081924, 0.080576, 0.078471, 0.077398, 0.076067, 0.074342, 0.073692, 0.077415, 0.075719, 0.075467, 0.074289, 0.076009, 0.073603, 0.077233, 0.079522, 0.081265, 0.080611, 0.082026, 0.081545, 0.079137, 0.081275, 0.084235, 0.081060, 0.080668, 0.076907, 0.078113, 0.073998, 0.076999, 0.080639, 0.081823, 0.080529, 0.079428, 0.080666, 0.076900, 0.078324, 0.084550, 0.085165, 0.086104, 0.085735, 0.086737, 0.082982, 0.087126, 0.086572, 0.087108, 0.087291, 0.087778
#*# 	  0.076307, 0.077228, 0.081630, 0.073098, 0.071964, 0.073244, 0.072106, 0.071619, 0.073477, 0.073363, 0.068591, 0.066865, 0.067700, 0.066904, 0.068131, 0.072449, 0.073921, 0.070721, 0.071901, 0.074990, 0.075698, 0.077070, 0.080660, 0.081389, 0.076224, 0.076937, 0.077970, 0.076647, 0.073760, 0.076717, 0.074601, 0.070459, 0.071899, 0.074044, 0.073747, 0.072996, 0.075385, 0.074607, 0.071733, 0.072784, 0.076543, 0.078077, 0.078475, 0.081418, 0.081470, 0.075697, 0.076326, 0.079410, 0.079431, 0.079594
#*# 	  0.068217, 0.072303, 0.070829, 0.069368, 0.067222, 0.064871, 0.068405, 0.066475, 0.065441, 0.065187, 0.064895, 0.061831, 0.059640, 0.061940, 0.065748, 0.067667, 0.067557, 0.068172, 0.065958, 0.066050, 0.068418, 0.070814, 0.072135, 0.071897, 0.073269, 0.070610, 0.069311, 0.070129, 0.069721, 0.070669, 0.066888, 0.066326, 0.064435, 0.065710, 0.067402, 0.068128, 0.067893, 0.067088, 0.068921, 0.065998, 0.066251, 0.070738, 0.073730, 0.073485, 0.068932, 0.068599, 0.065128, 0.066813, 0.069366, 0.067519
#*# 	  0.068126, 0.066969, 0.064416, 0.066640, 0.064551, 0.066197, 0.065111, 0.063558, 0.061261, 0.061001, 0.062905, 0.062491, 0.062647, 0.060476, 0.061077, 0.061266, 0.063323, 0.066247, 0.065884, 0.067625, 0.066375, 0.068846, 0.065864, 0.068125, 0.070356, 0.069758, 0.071956, 0.069844, 0.067804, 0.064402, 0.062827, 0.064389, 0.064547, 0.066871, 0.065495, 0.064583, 0.061708, 0.064396, 0.065139, 0.064917, 0.065890, 0.067325, 0.067159, 0.065672, 0.062620, 0.064086, 0.061567, 0.064569, 0.063314, 0.064460
#*# 	  0.072292, 0.068474, 0.069480, 0.067135, 0.067121, 0.066654, 0.064676, 0.063121, 0.066748, 0.064545, 0.065775, 0.066616, 0.063952, 0.062068, 0.064602, 0.065320, 0.067381, 0.068587, 0.065903, 0.066535, 0.064886, 0.064615, 0.073084, 0.073108, 0.074399, 0.073530, 0.073247, 0.070687, 0.067761, 0.069892, 0.068368, 0.066871, 0.065079, 0.064555, 0.062226, 0.062294, 0.065162, 0.068258, 0.067927, 0.064843, 0.065044, 0.063341, 0.062736, 0.066400, 0.067157, 0.068010, 0.062175, 0.063050, 0.063581, 0.067010
#*# 	  0.071061, 0.069800, 0.065510, 0.067903, 0.066893, 0.063872, 0.061254, 0.062266, 0.063859, 0.063426, 0.062249, 0.062481, 0.061883, 0.057200, 0.058844, 0.063414, 0.063709, 0.064257, 0.066228, 0.066987, 0.063065, 0.063622, 0.066638, 0.070030, 0.072475, 0.072717, 0.072076, 0.069225, 0.064334, 0.065682, 0.061994, 0.060927, 0.064075, 0.063701, 0.058690, 0.059477, 0.060480, 0.058874, 0.060522, 0.061627, 0.062051, 0.060008, 0.059800, 0.063227, 0.063111, 0.063290, 0.061231, 0.063039, 0.061231, 0.063522
#*# 	  0.058061, 0.056889, 0.056448, 0.054694, 0.055464, 0.054001, 0.052556, 0.053848, 0.051421, 0.051271, 0.053320, 0.052857, 0.050845, 0.050560, 0.053425, 0.050038, 0.050098, 0.055570, 0.056922, 0.057874, 0.055477, 0.057429, 0.057205, 0.057123, 0.061165, 0.063577, 0.060418, 0.060888, 0.056803, 0.054689, 0.049978, 0.051186, 0.051059, 0.052688, 0.050870, 0.051537, 0.047792, 0.044901, 0.051114, 0.051625, 0.052583, 0.050330, 0.049696, 0.049316, 0.049822, 0.054893, 0.053855, 0.052586, 0.048324, 0.049295
#*# 	  0.047225, 0.044441, 0.047854, 0.045425, 0.038226, 0.040948, 0.043590, 0.043612, 0.044740, 0.044352, 0.045205, 0.042459, 0.042569, 0.040941, 0.046808, 0.042833, 0.044271, 0.045704, 0.042230, 0.043962, 0.045308, 0.049279, 0.049298, 0.049800, 0.050877, 0.049183, 0.047800, 0.047134, 0.046221, 0.044443, 0.043920, 0.042903, 0.039079, 0.038272, 0.037340, 0.039203, 0.042299, 0.038552, 0.039684, 0.037732, 0.038846, 0.038368, 0.039388, 0.041954, 0.043729, 0.046015, 0.038469, 0.038359, 0.037685, 0.038299
#*# 	  0.037736, 0.036502, 0.033736, 0.033442, 0.030967, 0.034309, 0.034120, 0.035832, 0.034452, 0.031651, 0.035359, 0.034833, 0.034020, 0.034716, 0.035047, 0.031904, 0.034973, 0.032654, 0.034808, 0.038992, 0.038710, 0.037336, 0.037398, 0.039556, 0.040183, 0.041133, 0.045039, 0.044141, 0.038674, 0.036837, 0.032569, 0.028948, 0.031455, 0.031125, 0.035677, 0.032813, 0.029801, 0.026876, 0.027209, 0.028917, 0.033988, 0.035659, 0.033103, 0.033272, 0.032641, 0.031051, 0.028223, 0.029656, 0.028014, 0.028277
#*# 	  0.026489, 0.027535, 0.026209, 0.027307, 0.026363, 0.026955, 0.022594, 0.028975, 0.027351, 0.024090, 0.023492, 0.025946, 0.022587, 0.024296, 0.025996, 0.023848, 0.021707, 0.021954, 0.024306, 0.026344, 0.026566, 0.029157, 0.030288, 0.027660, 0.029132, 0.030914, 0.032832, 0.032834, 0.030545, 0.029406, 0.021599, 0.015281, 0.017721, 0.015136, 0.018473, 0.019351, 0.018453, 0.016666, 0.016714, 0.017732, 0.015768, 0.019273, 0.017238, 0.023211, 0.022159, 0.021424, 0.018448, 0.019279, 0.016369, 0.016848
#*# 	  0.021735, 0.023686, 0.025208, 0.024275, 0.020877, 0.019176, 0.016781, 0.018377, 0.014226, 0.017487, 0.016335, 0.016936, 0.011983, 0.015157, 0.012166, 0.015838, 0.016958, 0.017599, 0.016152, 0.017576, 0.016332, 0.021836, 0.023981, 0.022741, 0.021914, 0.021802, 0.021960, 0.021682, 0.022267, 0.020350, 0.015024, 0.011538, 0.008680, 0.005318, 0.005233, 0.010728, 0.011071, 0.011362, 0.008720, 0.006332, 0.004288, 0.004216, 0.009660, 0.016722, 0.013669, 0.014223, 0.008348, 0.008697, 0.005610, 0.006819
#*# 	  0.020062, 0.020497, 0.018008, 0.019396, 0.017106, 0.014779, 0.014517, 0.011652, 0.005828, 0.005268, 0.008724, 0.011471, 0.010946, 0.015092, 0.007892, 0.013371, 0.010565, 0.015712, 0.015303, 0.018087, 0.019176, 0.018205, 0.017501, 0.018874, 0.020911, 0.021006, 0.020633, 0.021808, 0.017212, 0.012884, 0.009308, 0.011593, 0.008017, 0.010758, 0.009406, 0.010472, 0.006670, 0.006669, 0.005814, 0.002069, 0.004629, 0.003856, 0.007340, 0.007623, 0.006828, 0.008239, 0.004340, 0.004430, 0.003572, 0.004907
#*# 	  0.021988, 0.020340, 0.019502, 0.016423, 0.012911, 0.009191, 0.009113, 0.006296, 0.006043, 0.005250, 0.006206, 0.007505, 0.009694, 0.012810, 0.013929, 0.014153, 0.014825, 0.016997, 0.015788, 0.016392, 0.013385, 0.014095, 0.018469, 0.021835, 0.021860, 0.020979, 0.018672, 0.015041, 0.011996, 0.013612, 0.013933, 0.011906, 0.008306, 0.011259, 0.007919, 0.006899, 0.005462, 0.010046, 0.006954, 0.002993, 0.005731, 0.000591, 0.002134, 0.003022, 0.006746, 0.004447, 0.003238, 0.000371, 0.000473, 0.003336
#*# 	  0.023213, 0.022303, 0.025493, 0.021284, 0.019425, 0.008465, 0.011653, 0.006892, 0.010740, 0.006595, 0.011789, 0.012247, 0.012844, 0.016840, 0.015006, 0.014974, 0.013332, 0.015813, 0.018140, 0.015400, 0.016469, 0.015651, 0.019325, 0.020468, 0.021595, 0.022799, 0.020135, 0.017938, 0.015314, 0.018090, 0.015588, 0.017039, 0.014674, 0.012787, 0.012844, 0.008542, 0.011135, 0.010454, 0.010182, 0.007510, 0.005725, 0.004388, 0.003166, 0.003610, 0.001580, 0.001879, -0.000138, 0.000900, 0.000081, 0.002186
#*# 	  0.020153, 0.021165, 0.021724, 0.018880, 0.018040, 0.014470, 0.014364, 0.012627, 0.011727, 0.010183, 0.012085, 0.015042, 0.016980, 0.017146, 0.018233, 0.015399, 0.015107, 0.015333, 0.018728, 0.016941, 0.017212, 0.015845, 0.013166, 0.013000, 0.016524, 0.020549, 0.019806, 0.018521, 0.016412, 0.015075, 0.014415, 0.014226, 0.015125, 0.013674, 0.013127, 0.011154, 0.007340, 0.004620, 0.004772, 0.005593, 0.005514, 0.004057, 0.000701, -0.003509, -0.003595, -0.001834, 0.003357, 0.004959, 0.003171, 0.003027
#*# 	  0.017426, 0.016851, 0.020203, 0.011789, 0.013144, 0.010977, 0.012991, 0.016035, 0.016652, 0.015185, 0.014247, 0.009673, 0.010779, 0.015517, 0.015868, 0.018059, 0.015404, 0.013487, 0.013518, 0.013064, 0.013001, 0.011777, 0.014918, 0.014627, 0.014174, 0.013785, 0.013677, 0.015099, 0.013402, 0.015516, 0.015938, 0.014797, 0.010201, 0.010712, 0.011375, 0.009839, 0.009475, 0.006048, 0.005132, 0.000945, -0.002375, -0.004459, -0.001851, -0.006683, -0.000559, -0.002725, 0.003053, 0.005486, 0.006068, 0.006739
#*# 	  0.016284, 0.014724, 0.016051, 0.014127, 0.013761, 0.013220, 0.014348, 0.012532, 0.013140, 0.013826, 0.012442, 0.013132, 0.012839, 0.014471, 0.013886, 0.013579, 0.013455, 0.012909, 0.013297, 0.012457, 0.012685, 0.009839, 0.008855, 0.010313, 0.010577, 0.010814, 0.011780, 0.012540, 0.009711, 0.009451, 0.009679, 0.008621, 0.007688, 0.008567, 0.009791, 0.009164, 0.005327, 0.003149, 0.000535, -0.001899, -0.005585, -0.007385, -0.000707, -0.010011, 0.000883, -0.005929, 0.002171, 0.002586, 0.005695, 0.004015
#*# 	  0.014414, 0.011988, 0.013249, 0.011043, 0.013695, 0.014295, 0.014401, 0.015795, 0.015037, 0.012252, 0.011392, 0.014836, 0.015783, 0.017420, 0.016049, 0.012536, 0.010157, 0.011077, 0.013443, 0.012291, 0.011984, 0.011348, 0.009837, 0.009350, 0.009464, 0.011563, 0.012445, 0.010983, 0.008229, 0.006965, 0.004677, 0.006150, 0.007315, 0.007418, 0.005864, 0.005931, 0.006942, 0.002808, -0.000123, -0.004094, -0.002195, -0.004526, -0.001085, -0.002992, -0.000822, -0.000676, 0.003282, 0.002677, 0.002547, 0.002853
#*# 	  0.009723, 0.009296, 0.008331, 0.006707, 0.006780, 0.004785, 0.007996, 0.011890, 0.011914, 0.011422, 0.011266, 0.010532, 0.008625, 0.010297, 0.008017, 0.007654, 0.008065, 0.007929, 0.008939, 0.007432, 0.005579, 0.002147, 0.003373, 0.003598, 0.004463, 0.004369, 0.001428, 0.000269, -0.000185, 0.000765, 0.000893, 0.000438, -0.001971, -0.001834, -0.002062, 0.001161, 0.001579, -0.000463, -0.004072, -0.006029, -0.007024, -0.006600, -0.004588, -0.002470, 0.000400, -0.004812, -0.004977, -0.007109, -0.005726, -0.005026
#*# 	  0.005795, 0.002474, 0.001749, -0.000878, 0.002083, 0.002063, 0.001944, 0.003148, 0.003993, 0.005162, 0.004660, 0.007406, 0.005139, 0.002790, 0.000535, 0.000254, 0.001659, 0.002701, 0.004513, 0.004635, 0.001179, -0.003924, -0.002226, -0.000082, -0.000717, -0.000630, 0.000606, -0.001989, -0.005617, -0.006021, -0.005727, -0.004429, -0.004198, -0.004195, -0.006393, -0.007473, -0.004513, -0.005885, -0.007551, -0.010034, -0.010400, -0.008742, -0.009795, -0.009171, -0.008830, -0.010603, -0.009744, -0.009513, -0.008469, -0.009274
#*# 	  0.001082, -0.000230, -0.000067, -0.000701, 0.000429, -0.001397, -0.001390, -0.001731, -0.000500, 0.000689, 0.001564, 0.001118, -0.001707, -0.001882, -0.002411, -0.001378, 0.001960, 0.001915, 0.002031, -0.000480, -0.001980, -0.002316, -0.003064, -0.001662, -0.001339, -0.002272, -0.004148, -0.004549, -0.009033, -0.010416, -0.007904, -0.006785, -0.008021, -0.008701, -0.008663, -0.011997, -0.008374, -0.005731, -0.008097, -0.011726, -0.013460, -0.012926, -0.012580, -0.013901, -0.012140, -0.011947, -0.008019, -0.011956, -0.010651, -0.014002
#*# 	  0.003225, -0.000011, 0.002054, 0.002105, 0.003565, -0.001357, -0.003593, -0.004793, -0.002771, 0.000137, 0.002091, 0.003550, -0.001222, 0.000913, -0.001629, 0.000591, 0.002516, 0.003614, 0.005148, 0.003182, 0.002147, -0.001092, -0.000689, 0.000530, 0.000272, 0.001899, -0.004295, -0.002187, -0.010555, -0.009251, -0.009141, -0.005944, -0.006509, -0.006238, -0.008521, -0.005854, -0.007956, -0.003279, -0.003962, -0.005542, -0.008323, -0.011622, -0.001550, -0.016221, -0.001034, -0.020911, 0.010684, -0.009034, -0.016849, -0.005096
#*# 	  0.008374, 0.007476, 0.008607, 0.008508, 0.009475, 0.007264, 0.004621, 0.003085, 0.004322, 0.006942, 0.009196, 0.011094, 0.009790, 0.010143, 0.009103, 0.007807, 0.007718, 0.009957, 0.011309, 0.009938, 0.007713, 0.004935, 0.005317, 0.007959, 0.006759, 0.006549, 0.003339, 0.003025, -0.004481, -0.003000, -0.001064, -0.001952, 0.000009, 0.002397, -0.001369, 0.008767, -0.004923, 0.011093, 0.000620, 0.009282, 0.004355, 0.004898, 0.008345, 0.003990, 0.006545, -0.001707, 0.000584, 0.003308, 0.009510, -0.012059
#*# 	  0.021870, 0.020819, 0.023000, 0.020991, 0.018244, 0.016588, 0.017692, 0.016987, 0.020817, 0.020641, 0.020361, 0.021788, 0.023304, 0.023926, 0.022690, 0.020611, 0.021826, 0.021593, 0.022031, 0.018764, 0.020501, 0.019074, 0.019713, 0.017929, 0.016712, 0.010923, 0.011960, 0.015424, 0.009613, 0.013388, 0.008908, 0.012465, 0.019361, 0.010823, 0.025996, 0.008237, 0.022156, 0.017494, 0.025313, 0.010382, 0.018341, 0.017737, 0.007903, 0.023386, 0.000695, 0.018507, 0.003697, 0.010741, 0.010601, 0.011915
#*# 	  0.036448, 0.035973, 0.037715, 0.033625, 0.034727, 0.033386, 0.034146, 0.033345, 0.034234, 0.034005, 0.034134, 0.035916, 0.035181, 0.034948, 0.033403, 0.032444, 0.033707, 0.034084, 0.034865, 0.036830, 0.035528, 0.032509, 0.027617, 0.028345, 0.024867, 0.031347, 0.027329, 0.029321, 0.023001, 0.039786, 0.018197, 0.033306, 0.023293, 0.021717, 0.030635, 0.017973, 0.037113, 0.014343, 0.033270, 0.018090, 0.023819, 0.025501, 0.016996, 0.025518, 0.017214, 0.021743, 0.022424, 0.028058, 0.021736, 0.025044
#*# 	  0.047765, 0.046312, 0.047346, 0.044861, 0.047507, 0.046661, 0.047945, 0.048395, 0.048998, 0.046396, 0.045379, 0.045767, 0.045801, 0.047686, 0.046232, 0.043880, 0.046198, 0.047766, 0.049995, 0.050649, 0.051623, 0.048321, 0.040052, 0.038982, 0.039092, 0.053030, 0.040918, 0.044774, 0.029777, 0.039481, 0.033382, 0.040173, 0.034428, 0.037253, 0.035472, 0.035897, 0.040129, 0.034451, 0.035857, 0.033039, 0.033406, 0.035468, 0.030924, 0.037596, 0.027623, 0.043714, 0.031357, 0.044082, 0.031074, 0.036952
#*# 	  0.053921, 0.054033, 0.056543, 0.053898, 0.053641, 0.051555, 0.052274, 0.055297, 0.055358, 0.054903, 0.054969, 0.054092, 0.051880, 0.053033, 0.052984, 0.053451, 0.055311, 0.057266, 0.059008, 0.060852, 0.057606, 0.052746, 0.054050, 0.048188, 0.042254, 0.042566, 0.048089, 0.048453, 0.035135, 0.048832, 0.055624, 0.043539, 0.037227, 0.037396, 0.040731, 0.038565, 0.051497, 0.036713, 0.051775, 0.039388, 0.043109, 0.046665, 0.035128, 0.062232, 0.034981, 0.058760, 0.033762, 0.050954, 0.037857, 0.034542
#*# 	  0.052425, 0.052078, 0.052621, 0.050167, 0.051074, 0.048005, 0.048007, 0.049078, 0.049493, 0.052312, 0.050732, 0.053960, 0.053451, 0.052727, 0.053727, 0.056474, 0.056787, 0.058535, 0.061198, 0.062297, 0.057758, 0.047453, 0.046390, 0.051212, 0.048157, 0.041772, 0.043917, 0.045046, 0.039291, 0.040387, 0.039151, 0.031246, 0.037680, 0.032728, 0.049956, 0.036537, 0.059712, 0.037293, 0.056965, 0.039373, 0.047135, 0.045431, 0.037453, 0.048956, 0.037344, 0.046662, 0.037099, 0.041657, 0.035526, 0.033848
#*# 	  0.046715, 0.045529, 0.046144, 0.044962, 0.043917, 0.041629, 0.040998, 0.043454, 0.046741, 0.048220, 0.050957, 0.050662, 0.051441, 0.052876, 0.053383, 0.053556, 0.055253, 0.057197, 0.057907, 0.060137, 0.058025, 0.052150, 0.044654, 0.056624, 0.047720, 0.045686, 0.037441, 0.036908, 0.036893, 0.028152, 0.022614, 0.043595, 0.040797, 0.031830, 0.041684, 0.036802, 0.042657, 0.036323, 0.039818, 0.038431, 0.039248, 0.040952, 0.038148, 0.037950, 0.036257, 0.034476, 0.033081, 0.035750, 0.030286, 0.040456
#*# 	  0.045570, 0.044953, 0.046030, 0.041328, 0.041379, 0.041565, 0.043919, 0.042681, 0.044031, 0.045567, 0.047211, 0.049044, 0.048326, 0.052528, 0.053392, 0.053016, 0.054079, 0.054786, 0.055497, 0.056092, 0.049369, 0.053592, 0.051425, 0.046325, 0.042366, 0.038055, 0.032332, 0.032736, 0.034118, 0.024806, 0.021244, 0.025078, 0.030734, 0.028853, 0.031626, 0.027175, 0.038026, 0.029595, 0.037248, 0.031658, 0.036555, 0.031409, 0.043765, 0.032286, 0.050898, 0.029120, 0.048739, 0.030234, 0.044272, 0.040666
#*# 	  0.046716, 0.046813, 0.043507, 0.041159, 0.042715, 0.042629, 0.045106, 0.046147, 0.045710, 0.044056, 0.046295, 0.048760, 0.050748, 0.053099, 0.052814, 0.052930, 0.052566, 0.054717, 0.054963, 0.055560, 0.046561, 0.056550, 0.053754, 0.038257, 0.048010, 0.036952, 0.036816, 0.031382, 0.036747, 0.031914, 0.030734, 0.027839, 0.033675, 0.040919, 0.038621, 0.045009, 0.036888, 0.049284, 0.035335, 0.044132, 0.045156, 0.037920, 0.058257, 0.032390, 0.056808, 0.026513, 0.051884, 0.027734, 0.040931, 0.033187
#*# 	  0.046865, 0.047527, 0.047036, 0.041525, 0.041850, 0.045554, 0.047552, 0.048241, 0.049263, 0.047558, 0.047456, 0.050828, 0.053327, 0.054268, 0.056335, 0.057324, 0.057166, 0.055700, 0.052465, 0.055223, 0.048723, 0.061383, 0.052264, 0.036234, 0.046651, 0.041608, 0.043610, 0.034286, 0.044016, 0.038518, 0.034934, 0.038685, 0.036756, 0.044894, 0.036730, 0.057492, 0.036689, 0.060125, 0.043698, 0.052562, 0.048819, 0.045140, 0.055531, 0.038244, 0.048251, 0.032187, 0.041174, 0.034454, 0.040373, 0.036896
#*# 	  0.051233, 0.050115, 0.049443, 0.046627, 0.045303, 0.046254, 0.050481, 0.053175, 0.052150, 0.050874, 0.051656, 0.053785, 0.054406, 0.057913, 0.057803, 0.059117, 0.061045, 0.060710, 0.059418, 0.059230, 0.055764, 0.064114, 0.054876, 0.044882, 0.047598, 0.047029, 0.057866, 0.039825, 0.055792, 0.047155, 0.040663, 0.041081, 0.048400, 0.050181, 0.043890, 0.062698, 0.040658, 0.059562, 0.038121, 0.062174, 0.038989, 0.045909, 0.046236, 0.044304, 0.045282, 0.042764, 0.041585, 0.042529, 0.044404, 0.042871
#*# 	  0.055549, 0.053779, 0.050437, 0.049336, 0.048354, 0.050686, 0.053703, 0.057319, 0.057947, 0.056055, 0.057005, 0.058074, 0.061832, 0.061651, 0.061748, 0.063503, 0.065264, 0.065965, 0.063963, 0.063200, 0.062436, 0.070181, 0.063933, 0.053854, 0.057795, 0.055488, 0.068346, 0.049423, 0.059412, 0.050330, 0.055073, 0.051039, 0.055989, 0.060778, 0.051010, 0.065970, 0.044174, 0.069313, 0.043848, 0.052995, 0.046866, 0.050075, 0.048859, 0.049403, 0.047293, 0.047932, 0.047628, 0.050361, 0.049245, 0.050476
#*# 	  0.059197, 0.058767, 0.055973, 0.054591, 0.053817, 0.054304, 0.057389, 0.060455, 0.060737, 0.060883, 0.061489, 0.062322, 0.062150, 0.062386, 0.063691, 0.065809, 0.066824, 0.068652, 0.066981, 0.065959, 0.066504, 0.073444, 0.070407, 0.057838, 0.061611, 0.059791, 0.062221, 0.058419, 0.067574, 0.049923, 0.069225, 0.054632, 0.052944, 0.057009, 0.054356, 0.069580, 0.064410, 0.058428, 0.052583, 0.054693, 0.052571, 0.052577, 0.051376, 0.053682, 0.053850, 0.054524, 0.053569, 0.055568, 0.055379, 0.054829
#*# 	  0.060772, 0.059567, 0.058296, 0.057748, 0.056178, 0.056529, 0.058782, 0.061091, 0.063455, 0.063357, 0.062808, 0.063425, 0.066154, 0.064661, 0.065900, 0.067095, 0.067584, 0.067898, 0.068833, 0.068005, 0.064795, 0.073508, 0.071901, 0.060157, 0.062482, 0.060503, 0.052591, 0.082142, 0.067950, 0.050255, 0.067088, 0.054555, 0.052515, 0.051423, 0.060166, 0.070840, 0.076058, 0.063481, 0.056002, 0.056862, 0.056556, 0.057898, 0.057520, 0.059048, 0.058492, 0.059776, 0.059784, 0.059424, 0.059905, 0.060106
#*# 	  0.067297, 0.066119, 0.066698, 0.065146, 0.063329, 0.064036, 0.064550, 0.065633, 0.067420, 0.067309, 0.068363, 0.069806, 0.071319, 0.071925, 0.071415, 0.070842, 0.070842, 0.072101, 0.071821, 0.069815, 0.067486, 0.076990, 0.080035, 0.064497, 0.064283, 0.059838, 0.056483, 0.087460, 0.072028, 0.058659, 0.061037, 0.054291, 0.057549, 0.055692, 0.065738, 0.068727, 0.077220, 0.072606, 0.060205, 0.061807, 0.062270, 0.061430, 0.061435, 0.064647, 0.065433, 0.065756, 0.065032, 0.066226, 0.065422, 0.065941
#*# 	  0.074083, 0.073308, 0.073418, 0.072112, 0.071357, 0.070140, 0.071963, 0.073155, 0.074060, 0.073229, 0.075461, 0.077000, 0.079191, 0.080288, 0.080472, 0.080986, 0.077038, 0.077620, 0.076777, 0.078332, 0.076075, 0.084371, 0.085482, 0.072201, 0.074280, 0.072582, 0.073208, 0.082862, 0.069595, 0.066403, 0.063208, 0.061217, 0.063530, 0.066063, 0.070697, 0.071154, 0.080125, 0.085778, 0.070065, 0.068209, 0.068928, 0.070217, 0.069628, 0.070919, 0.070419, 0.071881, 0.071986, 0.072118, 0.074898, 0.075443
#*# 	  0.085395, 0.086110, 0.086423, 0.086346, 0.083973, 0.082864, 0.083913, 0.083210, 0.084394, 0.085641, 0.087620, 0.090590, 0.091170, 0.091976, 0.092023, 0.091623, 0.090126, 0.088978, 0.088547, 0.088981, 0.086723, 0.092494, 0.097772, 0.083060, 0.085136, 0.087114, 0.086343, 0.088514, 0.082257, 0.080549, 0.070184, 0.069530, 0.073781, 0.074477, 0.077248, 0.081707, 0.084188, 0.092453, 0.080144, 0.079104, 0.079980, 0.080514, 0.077907, 0.079306, 0.078203, 0.080296, 0.079449, 0.081600, 0.082419, 0.084151
#*# 	  0.100612, 0.100805, 0.099358, 0.099403, 0.099361, 0.098813, 0.100387, 0.099921, 0.100921, 0.099845, 0.101134, 0.101953, 0.105284, 0.106767, 0.105796, 0.105152, 0.104517, 0.102590, 0.102465, 0.102978, 0.101882, 0.107131, 0.113080, 0.097247, 0.098384, 0.099950, 0.100176, 0.106698, 0.101550, 0.102271, 0.087051, 0.087380, 0.088889, 0.088059, 0.092196, 0.103081, 0.096910, 0.101946, 0.096629, 0.094557, 0.095152, 0.092920, 0.092584, 0.091304, 0.092312, 0.093493, 0.092940, 0.094499, 0.096124, 0.098137
#*# 	  0.119580, 0.119130, 0.117932, 0.117867, 0.119523, 0.118425, 0.118624, 0.119351, 0.120805, 0.120640, 0.121278, 0.122085, 0.122540, 0.122415, 0.122661, 0.122707, 0.122245, 0.121752, 0.120101, 0.119815, 0.120244, 0.127169, 0.127880, 0.114419, 0.117902, 0.118315, 0.115454, 0.131781, 0.120561, 0.126609, 0.112030, 0.109938, 0.109158, 0.108161, 0.114337, 0.126807, 0.123982, 0.119267, 0.115136, 0.114045, 0.113731, 0.113159, 0.111595, 0.110656, 0.110168, 0.112432, 0.114313, 0.114805, 0.116838, 0.119688
#*# x_count = 50
#*# y_count = 50
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 315.0
#*# min_y = 25.0
#*# max_y = 300.0
