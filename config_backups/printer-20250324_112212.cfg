[include mainsail.cfg]
[include led_effects.cfg]
[include config_backup.cfg]
[include blobifier/blobifier.cfg]
[exclude_object]
[virtual_sdcard]
path: /home/voron/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu]
canbus_uuid: f0657e1b3830

[mcu EBBCan]
canbus_uuid: a64abca93ae4

#[mcu scanner]
#canbus_uuid: d98b1773b521

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 20000
max_z_velocity: 30
max_z_accel: 350
square_corner_velocity: 5.0

[temperature_sensor octopus]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor toolhead]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4

#[temperature_sensor Cartographer_MCU]
#sensor_type: temperature_mcu
#sensor_mcu: scanner
#min_temp: 0
#max_temp: 105

#[scanner]
#mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
#x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
#y_offset: 21                         
#    adjust for your cartographers offset from nozzle to middle of coil
#backlash_comp: 0.00633
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
#sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
#sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
#mesh_runs: 2
#    Number of passes to make during mesh scan.

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 179, 20
accel_chip: adxl345
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0

[input_shaper]
shaper_freq_x: 50.4
shaper_type_x: mzv
shaper_freq_y: 34.8
shaper_type_y: mzv
damping_ratio_x: 0.045
damping_ratio_y: 0.052

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
number_of_results_to_keep: 10
keep_raw_data: False
show_macros_in_webui: True
timeout: 600
measurements_chunk_size: 5
max_freq: 200
dpi: 300

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: EBBCan: PB5
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
homing_retract_dist: 10
homing_positive_dir: true

[tmc5160 stepper_x]
cs_pin: PC4
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: false
run_current: 1.2
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: PG9
position_min: 0
position_endstop: 358
position_max: 358
homing_speed: 100
homing_retract_dist: 10
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PD11
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5
interpolate: false
run_current: 1.2
home_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.5
position_max: 310
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
rotation_distance: 22.6789511
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13
sensor_type: PT1000
pullup_resistor: 2200
sensor_pin: EBBCan: PA3
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
pressure_advance: 0.020
pressure_advance_smooth_time: 0.040
max_extrude_only_distance: 101

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   CNC Tap
##################################################################### 

[probe]
pin: !EBBCan: PB9
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[bed_mesh]
zero_reference_position: 175, 179   
speed: 300
horizontal_move_z: 5
mesh_min: 50, 50
mesh_max: 300, 300
probe_count: 9, 9
algorithm: bicubic
adaptive_margin: 0

#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: EBBCan: PA1
kick_start_time: 0.5
min_power: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: EBBCan: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan _controller_fan]
pin: PE5
kick_start_time: 0.5
shutdown_speed: 0
min_power: 0.1
max_power: 0.25

## The Filter fans - HE3 Output
[fan_generic filter_fans]
pin: PB10
kick_start_time: 0.5

#####################################################################
#   LED Control
#####################################################################

[output_pin fridge_light]
pin: PD12
pwm: true
shutdown_value: 0
value: 0.01
cycle_time: 0.01

[gcode_button fridge_door]
pin: ^PG10
press_gcode:
    {% if printer["virtual_sdcard"].is_active %}
        SET_PIN PIN=fridge_light VALUE=1.0
    {% else %}
        SET_PIN PIN=fridge_light VALUE=0.01
    {% endif %}
release_gcode:
    SET_PIN PIN=fridge_light VALUE=1.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position:175, 179
speed:100
z_hop:10

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
points:
   50,50
   50,300
   300,300
   300,50
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#   Macros
#####################################################################

[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
gcode:

  {% set target_bed = params.BED|int %}                                             # Fetch bed temp from slicer
  {% set target_extruder = params.EXTRUDER|int %}                                   # Fetch extruder temp from slicer
  {% set target_chamber = params.CHAMBER|default("40")|int %}                       # Fetch minimum chamber temp from slicer with a default of 40C
  {% set initial_tool = params.TOOL|default("0")|int %}                             # Fetch initial tool from slicer
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}                      # Set X center position
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}                      # Set Y center position

    SET_PIN PIN=fridge_light VALUE=1.0                                              # Set lighting to full brightness
    SET_GCODE_OFFSET Z=0                                                            # Set offset to 0
    STATUS_HOMING                                                                   # Set LEDs to homing mode
    G28                                                                             # Home all axes
    G90                                                                             # Set absolute positioning
    M83                                                                             # Set extruder to relative positioning
    SET_VELOCITY_LIMIT ACCEL=6000                                                   # Reset acceleration to machine limit
    BED_MESH_CLEAR                                                                  # Clear loaded bed mesh
    G1 X{x_wait} Y{y_wait} Z15 F9000                                                # Go to center of the bed
    STATUS_HEATING                                                                  # Set LEDs to heating mode
    SET_DISPLAY_TEXT MSG="Preheating"                                               # Display info
    M109 S150                                                                       # Set nozzle temp to 150C
    SET_FAN_SPEED FAN=filter_fans SPEED=1                                           # Turn on chamber fans
    M190 S{target_bed}                                                              # Heat bed to target temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Wait for minimum chamber temp
    SET_DISPLAY_TEXT MSG="Performing Initial QGL"                                   # Display info
    STATUS_LEVELING                                                                 # Set LEDs to leveling mode
    QUAD_GANTRY_LEVEL                                                               # Perform initial QGL
    G28 Z                                                                           # Home Z again after QGL
    STATUS_READY                                                                    # Set LEDs to ready
    SET_DISPLAY_TEXT MSG="Wiping Nozzle"                                            # Display info
    BLOBIFIER_CLEAN                                                                 # Wipe ooze from nozzle
    SET_DISPLAY_TEXT MSG="Performing Final QGL"                                     # Display info
    STATUS_LEVELING                                                                 # Set LEDs to leveling mode
    QUAD_GANTRY_LEVEL                                                               # Perform QGL with cleaned nozzle
    G28 Z                                                                           # Home Z again after QGL
    SET_DISPLAY_TEXT MSG="Performing Bed Mesh"                                      # Display info
    STATUS_MESHING                                                                  # Set LEDs to meshing mode
    BED_MESH_CALIBRATE ADAPTIVE=1                                                   # Perform adaptive bed mesh
    G1 X{x_wait} Y{y_wait} Z15 F9000                                                # Go to center of the bed
    BLOBIFIER_PARK                                                                  # Park over blobifier tray
    SET_DISPLAY_TEXT MSG="Hotend Heating to {target_extruder}C"                     # Display info
    STATUS_HEATING                                                                  # Set LEDs to heating mode
    M109 S{target_extruder}                                                         # Heat nozzle to target temp
    STATUS_READY                                                                    # Set LEDs to ready
    SET_DISPLAY_TEXT MSG="Loading Initial Tool"                                     # Display info
    T{initial_tool}                                                                 # Load initial tool, create blob, wipe and return to park
    SET_DISPLAY_TEXT MSG="Wiping Nozzle"                                            # Display info
    BLOBIFIER_CLEAN                                                                 # Wipe nozzle one more time
    SET_DISPLAY_TEXT MSG="Starting Print"                                           # Display info
    G0 X{x_wait - 50} Y4 F10000                                                     # Move to starting point
    G0 Z0.4                                                                         # Raise Z to 0.4
    G91                                                                             # Set incremental positioning 
    G1 X100 E20 F1000                                                               # Extrude prime line
    G90                                                                             # Set absolute positioning
    STATUS_PRINTING                                                                 # Set LEDs to printing mode
    SET_DISPLAY_TEXT MSG="Printing"                                                 # Display info

[gcode_macro PRINT_END]
gcode:

  {% set th = printer.toolhead %}                                                                             # Set toolhead
  {% set z_end = th.position.z %}                                                                             # Store current Z position for final park
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}               # Set final wipe move parameters
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}               # Set final wipe move parameters
  {% set z_safe = [z_end + 2, th.axis_maximum.z]|min %}                                                       # Set final wipe move parameters
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END                                                                     # Save gcode state
    M400                                                                                                      # Wait for buffer to clear
    G92 E0                                                                                                    # Zero the extruder
    G1 E-8.0 F1800                                                                                            # Retract filament
    G90                                                                                                       # Set absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                                                                   # Perform final anti-stringing wipe move
    BT_TOOL_UNLOAD                                                                                            # Unload current tool
    SET_VELOCITY_LIMIT ACCEL=6000                                                                             # Reset acceleration to machine limit
    TURN_OFF_HEATERS                                                                                          # Turn off heaters
    BLOBIFIER_CLEAN                                                                                           # Wipe ooze from nozzle
    G0 Z{z_safe} F1800                                                                                        # Move nozzle above the stored Z position
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 30} F3600                                                # Move to final park position
    M107                                                                                                      # Turn off parts cooling fan
    SET_FAN_SPEED FAN=filter_fans SPEED=0                                                                     # Turn off chamber fans
    M84                                                                                                       # Turn off motors
    _BLOBIFIER_COUNT_RESET                                                                                    # Reset blob counter
    SET_DISPLAY_TEXT MSG="Remember to empty the purge bucket!"                                                # Display info

  {% if printer["gcode_button fridge_door"].query == "RELEASED" %}                                            # Check if door is open
    SET_PIN PIN=fridge_light VALUE=1.0                                                                        # If open, leave lighting at full brightness
  {% else %}                                                                                                  # If door is not open
    SET_PIN PIN=fridge_light VALUE=0.01                                                                       # Dim lighting
  {% endif %}                                                                                                 # End door check
  
    STATUS_READY                                                                                              # Set LEDs to ready
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END                                                                  # Restore gcode state

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(40)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[include AFC/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.267
#*# pid_ki = 2.264
#*# pid_kd = 514.566
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.040
#*# pid_ki = 1.548
#*# pid_kd = 58.549
#*#
#*# [probe]
#*# z_offset = -0.965
